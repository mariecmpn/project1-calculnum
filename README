Dossier Projet 1 - Calcul Scientifique Numerique
Approximation d'un probleme de frontiere libre par une methode analytique

Author: COMPAIN Marie
(https://github.com/mariecmpn/project1-calculnum)

CONTENU DU DOSSIER:

- Makefile (cf partie 'COMPILATION' pour le detail des regles de compilation)
/!\ si besoin penser a changer le compilateur C utilise dans le Makefile;
- methodesnum.c: code en C des methodes numeriques utilisees dans ce projet (quadrature de Gauss-Legendre, methode de Newton);
- methodesnum.h: fichier header de methodesnum.c;
- donnees.c: code en C qui permet de definir les donnees du probleme (longueurs du domaine, nombre de termes dans les sommes, nombre de points de quadrature)
=> pour changer les donnees qu'on utilise on les change dans ces fonctions (pour que le changement s'applique partout);
- donnees.h: fichier header de donnees.h;
- fonctions.c: code en C des fonctions utilisees dans la partie 1 du projet (fonctions exactes, approchees...);
- fonctions.h: fichier header de fonctions.c;
- main.c: programme principal pour la partie 1 du projet (resolution du probleme de Cauchy);
- recup_partie1.py: code en Python qui permet de creer les graphiques d'erreur et des solutions pour la partie 1;
- fonctions2.c: code en C des fonctions utilisees pour la partie 2 du projet (qui dependent des fonctions de la partie1);
- fonctions2.h: fichier header de fonctions2.c;
- main2.c: programme principal pour la partie 2 du projet (determination de la frontiere libre);
- recup_partie2.py: code en Python qui permet de creer les graphiques des solutions pour la partie 2;
- Compte-rendu_COMPAIN.pdf: Compte-rendu du projet au format pdf;
- Compte-rendu_COMPAIN.tex: Compte-rendu du projet au format tex;
- IMAGES: dossier qui contient toutes les images pr√©sentes dans le compte-rendu.


COMPILATION:

regle 'partie1': compile le code pour la partie 1 du projet (question 4)
regle 'partie2': compile le code pour la partie 2 du projet (question 6)
regle 'clean': supprime les fichiers binaires et les fichiers executables

EXECUTION:

On peut executer les fichiers dans un terminal puis recuperer les resultats dans les codes python. Ou on peut directement executer les codes python qui executent partie1 et partie2 puis creer les graphiques.
